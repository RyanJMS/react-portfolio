{"version":3,"sources":["components/ContactBox/index.js","components/pages/Home.js","components/Project/index.js","components/pages/Portfolio.js","components/Header/index.js","components/Navbar/index.js","components/Footer/index.js","components/Layout/index.js","App.js","serviceWorker.js","index.js"],"names":["ContactBox","className","href","target","id","src","alt","title","Home","Project","image","description","repoLink","liveLink","Col","sm","lg","Card","style","width","Img","variant","Body","Title","Text","Button","Portfolio","useState","projectData","setProjects","useEffect","projects","Row","map","project","key","Header","fluid","Container","Navbar","location","useLocation","to","pathname","Footer","Layout","props","children","App","basename","exact","path","component","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.82940c68.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nexport default function ContactBox() {\n  return (\n    <div className=\"contact\">\n      <a href=\"https://github.com/RyanJMS\" target=\"_blank\">\n        <img id=\"github\" src=\"assets/images/github.svg\" alt=\"github\" />\n      </a>\n      <a\n        href=\"https://www.linkedin.com/in/ryan-schock-02422a170/\"\n        target=\"_blank\"\n      >\n        <img id=\"linkedin\" src=\"assets/images/linkedin.svg\" alt=\"linkin\" />\n      </a>\n\n      <img\n        id=\"phoneimg\"\n        src=\"assets/images/phone-call.svg\"\n        alt=\"phone\"\n        title=\"613-866-0322\"\n      />\n      <a href=\"mailto:jukkasc2@gmail.com\">\n        <img id=\"email\" src=\"assets/images/send.svg\" alt=\"email\" />\n      </a>\n      <a href=\"assets/resume-compressed.pdf\">\n        <img id=\"resume\" src=\"assets/images/file.svg\" alt=\"resume\" />\n      </a>\n    </div>\n  );\n}\n","import React from \"react\";\nimport ContactBox from \"../ContactBox\";\nimport * as ReactBootStrap from \"react-bootstrap\";\nimport \"./style.css\";\n\nexport default function Home() {\n  return (\n    <div>\n      <ReactBootStrap.Container>\n        <ReactBootStrap.Row>\n          <ReactBootStrap.Col>\n            <ReactBootStrap.Card>\n              <p>\n                My name is Ryan Schock, I am a full stack developer located in\n                Ottawa, Ontario.\n              </p>\n              <p>\n                Leveraging a background in finance, recently earned a full stack\n                web development certificate from Carleton University's Coding\n                Boot Camp (W2020)\n              </p>\n              <ContactBox />\n            </ReactBootStrap.Card>\n          </ReactBootStrap.Col>\n          <ReactBootStrap.Col>\n            <ReactBootStrap.Card>\n              <img alt=\"profilePic\" id=\"profile\" src=\"assets/images/git.jpg\" />\n            </ReactBootStrap.Card>\n          </ReactBootStrap.Col>\n        </ReactBootStrap.Row>\n      </ReactBootStrap.Container>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Col, Card, Button } from \"react-bootstrap\";\n\nexport default function Project({\n  title,\n  image,\n  description,\n  repoLink,\n  liveLink,\n}) {\n  return (\n    <div>\n      <Col sm={12} lg={4}>\n        <Card style={{ width: \"18rem\" }}>\n          <Card.Img id=\"img\" variant=\"top\" src={image} />\n          <Card.Body>\n            <Card.Title>{title}</Card.Title>\n            <Card.Text>{description}</Card.Text>\n            <Button href={repoLink} variant=\"primary\" target=\"_blank\">\n              Github Repo\n            </Button>{\" \"}\n            <Button variant=\"success\" href={liveLink}>\n              Live Demo\n            </Button>\n          </Card.Body>\n        </Card>\n      </Col>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport projects from \"../../projects.json\";\nimport Project from \"../Project\";\nimport { Row } from \"react-bootstrap\";\n\nexport default function Portfolio() {\n  const [projectData, setProjects] = useState([]);\n\n  useEffect(() => {\n    setProjects(projects);\n  }, []);\n  return (\n    <div>\n      <Row>\n        {projectData.map((project) => (\n          <Project\n            key={project.title}\n            title={project.title}\n            description={project.description}\n            image={project.image}\n            repoLink={project.repoLink}\n            liveLink={project.liveLink}\n          />\n        ))}\n      </Row>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Jumbotron as Jumbo, Container } from \"react-bootstrap\";\n\nexport default function Header() {\n  return (\n    <div>\n      <Jumbo fluid className=\"jumbo\">\n        <div className=\"overlay\">\n          <Container>\n            <h1>Ryan Schock</h1>\n            <p>Full Stack Web Developer</p>\n          </Container>\n        </div>\n      </Jumbo>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport \"./style.css\";\n\nexport default function Navbar() {\n  const location = useLocation();\n  return (\n    <ul className=\"nav nav-tabs\">\n      <li className=\"nav-item\">\n        <Link\n          to=\"/\"\n          className={location.pathname === \"/\" ? \"nav-link active\" : \"nav-link\"}\n        >\n          Home\n        </Link>\n      </li>\n      <li className=\"nav-item\">\n        <Link\n          to=\"/portfolio\"\n          className={\n            location.pathname === \"/portfolio\" ? \"nav-link active\" : \"nav-link\"\n          }\n        >\n          Portfolio\n        </Link>\n      </li>\n    </ul>\n  );\n}\n","import React from \"react\";\nimport \"./style.css\";\n\nexport default function Footer() {\n  return (\n    <footer className=\"footer\">\n      <span>&copy; Ryan Schock 2020</span>\n    </footer>\n  );\n}\n","import React from \"react\";\nimport { Container } from \"react-bootstrap\";\n\nexport default function Layout(props) {\n  return (\n    <div>\n      <Container fluid>{props.children}</Container>\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport { HashRouter as Router, Route } from \"react-router-dom\";\nimport Home from \"./components/pages/Home\";\nimport Portfolio from \"./components/pages/Portfolio\";\nimport Header from \"./components/Header\";\nimport Navbar from \"./components/Navbar\";\nimport Footer from \"./components/Footer\";\nimport Layout from \"./components/Layout\";\n\nfunction App() {\n  return (\n    <Router basename=\"/\">\n      <div>\n        <Header />\n        <Navbar />\n        <Layout>\n          <Route exact path=\"/\" component={Home} />\n          <Route path=\"/portfolio\" component={Portfolio} />\n        </Layout>\n        <Footer />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}